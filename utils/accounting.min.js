!function(n, r) {
    function e(n) {
        return !!("" === n || n && n.charCodeAt && n.substr);
    }
    function t(n) {
        return l ? l(n) : "[object Array]" === m.call(n);
    }
    function o(n) {
        return "[object Object]" === m.call(n);
    }
    function a(n, r) {
        var e;
        n = n || {}, r = r || {};
        for (e in r) r.hasOwnProperty(e) && null == n[e] && (n[e] = r[e]);
        return n;
    }
    function i(n, r, e) {
        var t, o, a = [];
        if (!n) return a;
        if (p && n.map === p) return n.map(r, e);
        for (t = 0, o = n.length; t < o; t++) a[t] = r.call(e, n[t], t, n);
        return a;
    }
    function u(n, r) {
        return n = Math.round(Math.abs(n)), isNaN(n) ? r : n;
    }
    function c(n) {
        var r = f.settings.currency.format;
        return "function" == typeof n && (n = n()), e(n) && n.match("%v") ? {
            pos: n,
            neg: n.replace("-", "").replace("%v", "-%v"),
            zero: n
        } : n && n.pos && n.pos.match("%v") ? n : e(r) ? f.settings.currency.format = {
            pos: r,
            neg: r.replace("%v", "-%v"),
            zero: r
        } : r;
    }
    var s, f = {
        version: "0.4.1",
        settings: {
            currency: {
                symbol: "$",
                format: "%s%v",
                decimal: ".",
                thousand: ",",
                precision: 2,
                grouping: 3
            },
            number: {
                precision: 0,
                grouping: 3,
                thousand: ",",
                decimal: "."
            }
        }
    }, p = Array.prototype.map, l = Array.isArray, m = Object.prototype.toString, d = f.unformat = f.parse = function(n, r) {
        if (t(n)) return i(n, function(n) {
            return d(n, r);
        });
        if ("number" == typeof (n = n || 0)) return n;
        r = r || ".";
        var e = RegExp("[^0-9-" + r + "]", [ "g" ]);
        e = parseFloat(("" + n).replace(/\((.*)\)/, "-$1").replace(e, "").replace(r, "."));
        return isNaN(e) ? 0 : e;
    }, g = f.toFixed = function(n, r) {
        r = u(r, f.settings.number.precision);
        var e = Math.pow(10, r);
        return (Math.round(f.unformat(n) * e) / e).toFixed(r);
    }, h = f.formatNumber = f.format = function(n, r, e, c) {
        if (t(n)) return i(n, function(n) {
            return h(n, r, e, c);
        });
        n = d(n);
        var s = a(o(r) ? r : {
            precision: r,
            thousand: e,
            decimal: c
        }, f.settings.number), p = u(s.precision), l = 0 > n ? "-" : "", m = parseInt(g(Math.abs(n || 0), p), 10) + "", y = 3 < m.length ? m.length % 3 : 0;
        return l + (y ? m.substr(0, y) + s.thousand : "") + m.substr(y).replace(/(\d{3})(?=\d)/g, "$1" + s.thousand) + (p ? s.decimal + g(Math.abs(n), p).split(".")[1] : "");
    }, y = f.formatMoney = function(n, r, e, s, p, l) {
        if (t(n)) return i(n, function(n) {
            return y(n, r, e, s, p, l);
        });
        n = d(n);
        var m = a(o(r) ? r : {
            symbol: r,
            precision: e,
            thousand: s,
            decimal: p,
            format: l
        }, f.settings.currency), g = c(m.format);
        return (0 < n ? g.pos : 0 > n ? g.neg : g.zero).replace("%s", m.symbol).replace("%v", h(Math.abs(n), u(m.precision), m.thousand, m.decimal));
    };
    f.formatColumn = function(n, r, s, p, l, m) {
        if (!n) return [];
        var g = a(o(r) ? r : {
            symbol: r,
            precision: s,
            thousand: p,
            decimal: l,
            format: m
        }, f.settings.currency), y = c(g.format), b = y.pos.indexOf("%s") < y.pos.indexOf("%v"), v = 0;
        n = i(n, function(n) {
            return t(n) ? f.formatColumn(n, g) : ((n = (0 < (n = d(n)) ? y.pos : 0 > n ? y.neg : y.zero).replace("%s", g.symbol).replace("%v", h(Math.abs(n), u(g.precision), g.thousand, g.decimal))).length > v && (v = n.length), 
            n);
        });
        return i(n, function(n) {
            return e(n) && n.length < v ? b ? n.replace(g.symbol, g.symbol + Array(v - n.length + 1).join(" ")) : Array(v - n.length + 1).join(" ") + n : n;
        });
    }, "undefined" != typeof exports ? ("undefined" != typeof module && module.exports && (exports = module.exports = f), 
    exports.accounting = f) : "function" == typeof define && define.amd ? define([], function() {
        return f;
    }) : (f.noConflict = (s = n.accounting, function() {
        return n.accounting = s, f.noConflict = void 0, f;
    }), n.accounting = f);
}(void 0);